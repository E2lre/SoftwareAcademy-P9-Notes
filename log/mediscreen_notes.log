2021-02-12 10:40:55,212 INFO c.m.n.t.NoteServiceTest-logStartupProfileInfo [main] No active profile set, falling back to default profiles: default
2021-02-12 10:40:56,451 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-02-12 10:40:56,464 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Scanning for MongoDB repositories in packages com.mediscreen.notes.
2021-02-12 10:40:56,479 DEBUG o.s.d.r.c.RepositoryComponentProvider-scanCandidateComponents [main] Identified candidate component class: file [E:\Documents E\git\P9\SoftwareAcademie-P9\SoftwareAcademy-P9-Notes\target\classes\com\mediscreen\notes\dao\NoteDao.class]
2021-02-12 10:40:56,773 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Finished Spring Data repository scanning in 308ms. Found 1 MongoDB repository interfaces.
2021-02-12 10:40:56,925 WARN o.s.b.a.e.EndpointId-logWarning [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-12 10:40:59,385 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:40:59,396 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:41:03,444 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:41:03,449 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:41:03,451 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:41:03,451 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:41:03,629 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:41:03,632 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:41:03,633 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:41:03,634 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:41:03,715 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator-checkForIndexes [main] Analyzing class class com.mediscreen.notes.model.Note for index information.
2021-02-12 10:41:07,818 WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-logWarning [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-12 10:41:11,099 INFO c.m.n.t.NoteServiceTest-logStarted [main] Started NoteServiceTest in 21.748 seconds (JVM running for 30.353)
2021-02-12 10:41:11,514 ERROR c.n.d.DiscoveryClient-notify [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1613122871514, current=DOWN, previous=UP]
2021-02-12 10:42:53,404 INFO c.m.n.t.NoteControllerIT-logStartupProfileInfo [main] No active profile set, falling back to default profiles: default
2021-02-12 10:42:54,596 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-02-12 10:42:54,609 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Scanning for MongoDB repositories in packages com.mediscreen.notes.
2021-02-12 10:42:54,622 DEBUG o.s.d.r.c.RepositoryComponentProvider-scanCandidateComponents [main] Identified candidate component class: file [E:\Documents E\git\P9\SoftwareAcademie-P9\SoftwareAcademy-P9-Notes\target\classes\com\mediscreen\notes\dao\NoteDao.class]
2021-02-12 10:42:54,854 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Finished Spring Data repository scanning in 243ms. Found 1 MongoDB repository interfaces.
2021-02-12 10:42:55,027 WARN o.s.b.a.e.EndpointId-logWarning [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-12 10:42:56,897 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:42:56,902 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:42:56,904 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:42:56,905 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:42:57,173 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:42:57,175 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:42:57,176 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:42:57,177 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:42:57,251 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator-checkForIndexes [main] Analyzing class class com.mediscreen.notes.model.Note for index information.
2021-02-12 10:42:57,380 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Initializing repository instance for com.mediscreen.notes.dao.NoteDaoâ€¦
2021-02-12 10:42:57,492 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Finished creation of repository instance for com.mediscreen.notes.dao.NoteDao.
2021-02-12 10:42:58,034 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:42:58,045 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:43:04,236 WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-logWarning [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-12 10:43:06,054 INFO c.m.n.t.NoteControllerIT-logStarted [main] Started NoteControllerIT in 17.737 seconds (JVM running for 21.684)
2021-02-12 10:43:07,071 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:43:07,121 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:43:07,223 INFO c.m.n.c.NotesController-getAllNotes [main] getAllNotes start/finish
2021-02-12 10:43:07,244 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: {} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:43:07,381 ERROR c.n.d.DiscoveryClient-notify [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1613122987381, current=DOWN, previous=UP]
2021-02-12 10:43:33,196 INFO c.m.n.t.NoteControllerIT-logStartupProfileInfo [main] No active profile set, falling back to default profiles: default
2021-02-12 10:43:34,379 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-02-12 10:43:34,391 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Scanning for MongoDB repositories in packages com.mediscreen.notes.
2021-02-12 10:43:34,404 DEBUG o.s.d.r.c.RepositoryComponentProvider-scanCandidateComponents [main] Identified candidate component class: file [E:\Documents E\git\P9\SoftwareAcademie-P9\SoftwareAcademy-P9-Notes\target\classes\com\mediscreen\notes\dao\NoteDao.class]
2021-02-12 10:43:34,636 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Finished Spring Data repository scanning in 243ms. Found 1 MongoDB repository interfaces.
2021-02-12 10:43:34,799 WARN o.s.b.a.e.EndpointId-logWarning [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-12 10:43:36,595 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:36,600 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:36,602 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:36,603 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:36,908 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:36,910 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:36,911 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:36,912 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:36,990 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator-checkForIndexes [main] Analyzing class class com.mediscreen.notes.model.Note for index information.
2021-02-12 10:43:37,119 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Initializing repository instance for com.mediscreen.notes.dao.NoteDaoâ€¦
2021-02-12 10:43:37,213 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Finished creation of repository instance for com.mediscreen.notes.dao.NoteDao.
2021-02-12 10:43:37,770 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:43:37,780 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:43:43,581 WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-logWarning [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-12 10:43:45,255 INFO c.m.n.t.NoteControllerIT-logStarted [main] Started NoteControllerIT in 17.287 seconds (JVM running for 21.372)
2021-02-12 10:43:45,932 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:43:45,966 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:43:46,045 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "123"}}, Fields: {}, Sort: {}
2021-02-12 10:43:46,058 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "123"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:43:46,193 INFO c.m.n.c.NotesController-saveNote [main] saveNote start
2021-02-12 10:43:46,195 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "id" : "60264dd1883e0a01aaffb763"}, Fields: {}, Sort: {}
2021-02-12 10:43:46,198 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "_id" : { "$oid" : "60264dd1883e0a01aaffb763"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:43:46,203 DEBUG o.s.d.m.c.MongoTemplate-saveDocument [main] Saving Document containing fields: [_id, Patient_Id, Text_Note, Date_Note, _class]
2021-02-12 10:43:46,211 INFO c.m.n.s.NoteServceImpl-updateNote [main] Note id 60264dd1883e0a01aaffb763 is updated
2021-02-12 10:43:46,212 INFO c.m.n.c.NotesController-saveNote [main] Note id 60264dd1883e0a01aaffb763 is updated
2021-02-12 10:43:46,279 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:43:46,281 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:43:46,318 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "123"}}, Fields: {}, Sort: {}
2021-02-12 10:43:46,319 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "123"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:43:46,325 INFO c.m.n.c.NotesController-getNoteById [main] getNoteById start
2021-02-12 10:43:46,326 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "id" : "60264dd2883e0a01aaffb764"}, Fields: {}, Sort: {}
2021-02-12 10:43:46,327 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "_id" : { "$oid" : "60264dd2883e0a01aaffb764"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:43:46,329 INFO c.m.n.c.NotesController-getNoteById [main] getNoteById finish
2021-02-12 10:43:46,364 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:43:46,364 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:43:46,389 INFO c.m.n.c.NotesController-getNoteByPatientId [main] getNoteByPatientId start
2021-02-12 10:43:46,390 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "123"}}, Fields: {}, Sort: {}
2021-02-12 10:43:46,391 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "123"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:43:46,393 INFO c.m.n.c.NotesController-getNoteByPatientId [main] getNoteByPatientId finish
2021-02-12 10:43:46,416 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:43:46,417 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:43:46,449 INFO c.m.n.c.NotesController-getNoteByPatientId [main] getNoteByPatientId start
2021-02-12 10:43:46,450 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "0"}}, Fields: {}, Sort: {}
2021-02-12 10:43:46,451 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "0"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:43:46,454 ERROR c.m.n.c.NotesController-getNoteByPatientId [main] no note for patient 0 exist
2021-02-12 10:43:46,455 ERROR c.m.n.c.e.NoteIdNotFoundException-<init> [main] no note for patient 0 exist
2021-02-12 10:43:46,484 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:43:46,485 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:43:46,505 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "123"}}, Fields: {}, Sort: {}
2021-02-12 10:43:46,506 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "123"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:43:46,516 INFO c.m.n.c.NotesController-deleteNote [main] saveNote start
2021-02-12 10:43:46,516 ERROR c.m.n.c.NotesController-deleteNote [main] note id must not be null
2021-02-12 10:43:46,517 ERROR c.m.n.c.e.NoteCanNotBeDeletedException-<init> [main] note id must not be null
2021-02-12 10:43:46,523 ERROR c.n.d.DiscoveryClient-notify [main] Saw local status change event StatusChangeEvent [timestamp=1613123026522, current=DOWN, previous=UP]
2021-02-12 10:43:54,309 INFO c.m.n.t.NoteControllerIT-logStartupProfileInfo [main] No active profile set, falling back to default profiles: default
2021-02-12 10:43:54,875 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-02-12 10:43:54,876 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Scanning for MongoDB repositories in packages com.mediscreen.notes.
2021-02-12 10:43:54,886 DEBUG o.s.d.r.c.RepositoryComponentProvider-scanCandidateComponents [main] Identified candidate component class: file [E:\Documents E\git\P9\SoftwareAcademie-P9\SoftwareAcademy-P9-Notes\target\classes\com\mediscreen\notes\dao\NoteDao.class]
2021-02-12 10:43:54,897 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Finished Spring Data repository scanning in 20ms. Found 1 MongoDB repository interfaces.
2021-02-12 10:43:55,338 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:55,339 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:55,340 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:55,340 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:55,428 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:55,429 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:55,429 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:55,430 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:43:55,451 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator-checkForIndexes [main] Analyzing class class com.mediscreen.notes.model.Note for index information.
2021-02-12 10:43:55,486 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Initializing repository instance for com.mediscreen.notes.dao.NoteDaoâ€¦
2021-02-12 10:43:55,491 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Finished creation of repository instance for com.mediscreen.notes.dao.NoteDao.
2021-02-12 10:43:55,724 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:43:59,974 WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-logWarning [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-12 10:44:00,666 INFO c.m.n.t.NoteControllerIT-logStarted [main] Started NoteControllerIT in 10.368 seconds (JVM running for 36.784)
2021-02-12 10:44:00,866 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:44:00,872 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:00,890 INFO c.m.n.c.NotesController-getNoteById [main] getNoteById start
2021-02-12 10:44:00,891 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "id" : "0"}, Fields: {}, Sort: {}
2021-02-12 10:44:00,892 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "_id" : "0"} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:00,894 ERROR c.m.n.c.NotesController-getNoteById [main] The note id 0 doesn't exist
2021-02-12 10:44:00,894 ERROR c.m.n.c.e.NoteIdNotFoundException-<init> [main] The note id 0 doesn't exist
2021-02-12 10:44:00,913 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:44:00,914 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:00,929 INFO c.m.n.c.NotesController-getAllNotes [main] getAllNotes start/finish
2021-02-12 10:44:00,930 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: {} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:00,954 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:44:00,955 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:00,976 INFO c.m.n.c.NotesController-addNote [main] addNote start
2021-02-12 10:44:00,976 ERROR c.m.n.c.NotesController-addNote [main] id is autogenerate, don't give a value for adding in data base
2021-02-12 10:44:00,977 ERROR c.m.n.c.e.NoteCanNotbeAddedException-<init> [main] id is autogenerate, don't give a value for adding in data base
2021-02-12 10:44:00,992 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:44:00,993 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:01,007 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "123"}}, Fields: {}, Sort: {}
2021-02-12 10:44:01,008 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "123"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:01,014 INFO c.m.n.c.NotesController-deleteNote [main] saveNote start
2021-02-12 10:44:01,015 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "id" : "60264de0883e0a01aaffb76c"}, Fields: {}, Sort: {}
2021-02-12 10:44:01,016 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "_id" : { "$oid" : "60264de0883e0a01aaffb76c"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:01,022 DEBUG o.s.d.m.c.MongoTemplate-lambda$doRemove$19 [main] Remove using query: { "_id" : { "$oid" : "60264de0883e0a01aaffb76c"}} in collection: Note.
2021-02-12 10:44:01,026 INFO c.m.n.s.NoteServceImpl-deleteNote [main] Note id 60264de0883e0a01aaffb76c is deleted
2021-02-12 10:44:01,026 INFO c.m.n.c.NotesController-deleteNote [main] Note id 60264de0883e0a01aaffb76c is deleted
2021-02-12 10:44:01,032 ERROR c.n.d.DiscoveryClient-notify [main] Saw local status change event StatusChangeEvent [timestamp=1613123041032, current=DOWN, previous=UP]
2021-02-12 10:44:09,467 INFO c.m.n.t.NoteControllerIT-logStartupProfileInfo [main] No active profile set, falling back to default profiles: default
2021-02-12 10:44:10,077 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-02-12 10:44:10,078 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Scanning for MongoDB repositories in packages com.mediscreen.notes.
2021-02-12 10:44:10,084 DEBUG o.s.d.r.c.RepositoryComponentProvider-scanCandidateComponents [main] Identified candidate component class: file [E:\Documents E\git\P9\SoftwareAcademie-P9\SoftwareAcademy-P9-Notes\target\classes\com\mediscreen\notes\dao\NoteDao.class]
2021-02-12 10:44:10,092 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Finished Spring Data repository scanning in 13ms. Found 1 MongoDB repository interfaces.
2021-02-12 10:44:10,543 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:10,544 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:10,545 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:10,545 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:10,639 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:10,639 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:10,640 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:10,640 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:10,661 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator-checkForIndexes [main] Analyzing class class com.mediscreen.notes.model.Note for index information.
2021-02-12 10:44:10,699 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Initializing repository instance for com.mediscreen.notes.dao.NoteDaoâ€¦
2021-02-12 10:44:10,703 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Finished creation of repository instance for com.mediscreen.notes.dao.NoteDao.
2021-02-12 10:44:10,919 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:44:15,040 WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-logWarning [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-12 10:44:15,628 INFO c.m.n.t.NoteControllerIT-logStarted [main] Started NoteControllerIT in 10.628 seconds (JVM running for 51.746)
2021-02-12 10:44:15,685 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:44:15,691 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:15,713 INFO c.m.n.c.NotesController-addNote [main] addNote start
2021-02-12 10:44:15,713 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:15,732 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:44:15,733 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:15,760 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "123"}}, Fields: {}, Sort: {}
2021-02-12 10:44:15,761 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "123"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:15,769 INFO c.m.n.c.NotesController-saveNote [main] saveNote start
2021-02-12 10:44:15,769 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "id" : "60264def883e0a01aaffb770"}, Fields: {}, Sort: {}
2021-02-12 10:44:15,770 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "_id" : { "$oid" : "60264def883e0a01aaffb770"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:15,772 INFO c.m.n.s.NoteServceImpl-updateNote [main] Note id 60264def883e0a01aaffb770 doesn't exist or patient id 999 is incorrect
2021-02-12 10:44:15,772 ERROR c.m.n.c.NotesController-saveNote [main] Note id 60264def883e0a01aaffb770 can not be updated
2021-02-12 10:44:15,772 ERROR c.m.n.c.NotesController-saveNote [main] Note id 60264def883e0a01aaffb770 can not be updated
2021-02-12 10:44:15,772 ERROR c.m.n.c.e.NoteCanNotBeSavedException-<init> [main] Note id 60264def883e0a01aaffb770 can not be updated
2021-02-12 10:44:15,789 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:44:15,790 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:15,804 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "123"}}, Fields: {}, Sort: {}
2021-02-12 10:44:15,805 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "123"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:15,811 INFO c.m.n.c.NotesController-deleteNote [main] saveNote start
2021-02-12 10:44:15,812 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "id" : "zzz999"}, Fields: {}, Sort: {}
2021-02-12 10:44:15,812 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "_id" : "zzz999"} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:15,814 INFO c.m.n.s.NoteServceImpl-deleteNote [main] Note id zzz999 doesn't exist or patient id 123 is incorrect
2021-02-12 10:44:15,814 ERROR c.m.n.c.NotesController-deleteNote [main] Note id zzz999 can not be deleted
2021-02-12 10:44:15,814 ERROR c.m.n.c.NotesController-deleteNote [main] Note id zzz999 can not be deleted
2021-02-12 10:44:15,814 ERROR c.m.n.c.e.NoteCanNotBeDeletedException-<init> [main] Note id zzz999 can not be deleted
2021-02-12 10:44:15,819 ERROR c.n.d.DiscoveryClient-notify [main] Saw local status change event StatusChangeEvent [timestamp=1613123055819, current=DOWN, previous=UP]
2021-02-12 10:44:23,689 INFO c.m.n.t.NoteControllerIT-logStartupProfileInfo [main] No active profile set, falling back to default profiles: default
2021-02-12 10:44:24,062 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-02-12 10:44:24,063 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Scanning for MongoDB repositories in packages com.mediscreen.notes.
2021-02-12 10:44:24,068 DEBUG o.s.d.r.c.RepositoryComponentProvider-scanCandidateComponents [main] Identified candidate component class: file [E:\Documents E\git\P9\SoftwareAcademie-P9\SoftwareAcademy-P9-Notes\target\classes\com\mediscreen\notes\dao\NoteDao.class]
2021-02-12 10:44:24,076 INFO o.s.d.r.c.RepositoryConfigurationDelegate-registerRepositoriesIn [main] Finished Spring Data repository scanning in 12ms. Found 1 MongoDB repository interfaces.
2021-02-12 10:44:24,419 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:24,420 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:24,420 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:24,420 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:24,499 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:24,499 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:24,499 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.LocalDateTime to class java.time.Instant as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:24,500 DEBUG o.s.d.c.CustomConversions-warnIfNotTimeType [main] Registering converter from class java.time.Instant to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2021-02-12 10:44:24,517 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator-checkForIndexes [main] Analyzing class class com.mediscreen.notes.model.Note for index information.
2021-02-12 10:44:24,548 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Initializing repository instance for com.mediscreen.notes.dao.NoteDaoâ€¦
2021-02-12 10:44:24,551 DEBUG o.s.d.r.c.s.RepositoryFactorySupport-getRepository [main] Finished creation of repository instance for com.mediscreen.notes.dao.NoteDao.
2021-02-12 10:44:24,749 WARN c.n.c.s.URLConfigurationSource-<init> [main] No URLs will be polled as dynamic configuration sources.
2021-02-12 10:44:28,688 WARN o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger-logWarning [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-12 10:44:29,292 INFO c.m.n.t.NoteControllerIT-logStarted [main] Started NoteControllerIT in 9.507 seconds (JVM running for 65.41)
2021-02-12 10:44:29,424 DEBUG o.s.d.m.c.MongoTemplate-doInCollection [main] Dropped collection [Note]
2021-02-12 10:44:29,429 DEBUG o.s.d.m.c.MongoTemplate-insertDocument [main] Inserting Document containing fields: [Patient_Id, Text_Note, Date_Note, _class] in collection: Note
2021-02-12 10:44:29,457 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "patientId" : { "$numberLong" : "123"}}, Fields: {}, Sort: {}
2021-02-12 10:44:29,458 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "Patient_Id" : { "$numberLong" : "123"}} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:29,468 INFO c.m.n.c.NotesController-saveNote [main] saveNote start
2021-02-12 10:44:29,469 DEBUG o.s.d.m.r.q.MongoQueryCreator-complete [main] Created query Query: { "id" : "zzz999"}, Fields: {}, Sort: {}
2021-02-12 10:44:29,469 DEBUG o.s.d.m.c.MongoTemplate-doFind [main] find using query: { "_id" : "zzz999"} fields: {} for class: class com.mediscreen.notes.model.Note in collection: Note
2021-02-12 10:44:29,471 INFO c.m.n.s.NoteServceImpl-updateNote [main] Note id zzz999 doesn't exist or patient id 123 is incorrect
2021-02-12 10:44:29,471 ERROR c.m.n.c.NotesController-saveNote [main] Note id zzz999 can not be updated
2021-02-12 10:44:29,471 ERROR c.m.n.c.NotesController-saveNote [main] Note id zzz999 can not be updated
2021-02-12 10:44:29,472 ERROR c.m.n.c.e.NoteCanNotBeSavedException-<init> [main] Note id zzz999 can not be updated
2021-02-12 10:44:29,487 ERROR c.n.d.DiscoveryClient-notify [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1613123069487, current=DOWN, previous=UP]
